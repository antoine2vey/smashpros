generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String       @id @default(uuid())
  created_at             DateTime     @default(now())
  updated_at             DateTime     @updatedAt
  profile_picture        String?
  lat                    Float?
  lng                    Float?
  in_tournament          Boolean      @default(false)
  is_playing             Boolean      @default(false)
  tournament_id          String?
  prefix                 String?
  crew_id                String?
  password               String
  email                  String       @unique
  tag                    String
  reset_token            String?
  reset_token_expiration DateTime?
  crew                   Crew?        @relation(fields: [crew_id], references: [id])
  current_tournament     Tournament?  @relation(fields: [tournament_id], references: [id])
  characters             Character[]
  roles                  Role[]
  favorited_tournaments  Tournament[] @relation("favorited_tournaments")
}

model Character {
  id      String @id @default(uuid())
  name    String @unique
  picture String
  users   User[]
}

model Tournament {
  id                        String    @id @default(uuid())
  name                      String    @unique
  lat                       Float?
  lng                       Float?
  city                      String?
  countryCode               String
  createdAt                 DateTime?
  currency                  String
  numAttendees              Int
  endAt                     DateTime?
  eventRegistrationClosesAt DateTime?
  hasOfflineEvents          Boolean?
  images                    Json[]
  isRegistrationOpen        Boolean?
  slug                      String
  state                     Int
  venueName                 String?
  venueAddress              String?
  tournament_id             Int       @unique
  participants              User[]
  favorited_by              User[]    @relation("favorited_tournaments")
}

model Crew {
  id      String @id @default(uuid())
  name    String @unique
  prefix  String
  members User[]
}

model Role {
  id    String   @id @default(uuid())
  name  RoleEnum
  users User[]
}

enum RoleEnum {
  ADMIN
  TOURNAMENT_ORGANIZER
  CREW_ADMIN
  USER
}
