### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Character {
  id: ID!
  name: String!
  picture: String!
  users: [User!]!
}

type Crew {
  id: ID!
  members: [User!]!
  name: String!
  prefix: String!
  waiting_members: [User!]!
}

"""Date custom scalar type"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  register(payload: UserRegisterPayload): User
}

type Query {
  characters: [Character]
  tournaments: [Tournament]
}

type Tournament {
  city: String
  countryCode: String!
  createdAt: DateTime
  currency: String!
  endAt: DateTime
  eventRegistrationClosesAt: DateTime
  favorited_by: [User!]!
  hasOfflineEvents: Boolean
  id: ID!
  isRegistrationOpen: Boolean
  lat: Float
  lng: Float
  name: String!
  numAttendees: Int!
  participants(query: TournamentQuery): [User!]!
  slug: String!
  state: Int!
  tournament_id: Int!
  venueAddress: String
  venueName: String
}

input TournamentQuery {
  id: ID
  player: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  characters: [Character!]!
  id: ID!
  profile_picture: String
  tag: String!
}

input UserRegisterPayload {
  characters: [ID!]
  email: String
  password: String
  profilePicture: Upload
  tag: String
}

input UserUpdatePayload {
  characters: [ID!]
  email: String
  id: String
  profilePicture: Upload
  tag: String
}
